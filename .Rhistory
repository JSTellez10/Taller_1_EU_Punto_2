stat_summary(fun = mean, geom = "point",
shape = 21, size = 2, stroke = 0.3,
fill = "white", color = "black") +
scale_x_discrete(limits = c("Q1","Q2","Q3","Q4")) +
scale_fill_viridis(discrete = TRUE, option = "C", guide = "none") +
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Distribución de precios por cuartiles de superficie",
subtitle = "Paneles por operación (Venta vs. Alquiler)",
x = "Cuartil de superficie",
y = "Log(Precio)"
) +
theme_classic(base_size = 12) +
theme(plot.title = element_text(face = "bold"),
panel.grid.minor = element_blank())
ggplot(
housing_data %>%
filter(is.finite(price)) %>%
mutate(
operation = factor(operation, levels = c("Venta","Alquiler"))
),
aes(
x = log(price),
y = fct_reorder(tipo, price, .fun = median, .desc = FALSE)
)
) +
# forma de la distribución
geom_violin(trim = FALSE, alpha = 0.15, color = NA, fill = "#6C8EBF") +
# caja (dispersión) con outliers atenuados
geom_boxplot(width = 0.55, notch = TRUE, outlier.alpha = 0.12, color = "grey20", fill = "grey90") +
# punto de la media
stat_summary(fun = mean, geom = "point",
shape = 21, size = 2.2, stroke = 0.3,
fill = "white", color = "black") +
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Distribución de precios por tipo de propiedad",
subtitle = "Paneles por operación (Venta vs. Alquiler)\nViolin = forma | Boxplot = dispersión | Punto = media",
x = "Log(Precio)",
y = "Tipo de propiedad (ordenado por mediana)"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold"),
panel.grid.minor = element_blank(),
legend.position = "none"
)
ggplot(housing_data, aes(x = surface_q, y = log_price, fill = surface_q)) +
geom_violin(trim = FALSE, width = 0.9, alpha = 0.15, color = NA) +
geom_boxplot(width = 0.55, notch = TRUE, outlier.alpha = 0.12) +
stat_summary(fun = mean, geom = "point",
shape = 21, size = 2, stroke = 0.3,
fill = "white", color = "black") +
scale_x_discrete(limits = c("Q1","Q2","Q3","Q4")) +
scale_fill_viridis(discrete = TRUE, option = "C", guide = "none") +
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Distribución de precios por cuartiles de superficie",
subtitle = "Paneles por operación (Venta vs. Alquiler)",
x = "Cuartil de superficie",
y = "Log(Precio)"
) +
theme_classic(base_size = 12) +
theme(plot.title = element_text(face = "bold"),
panel.grid.minor = element_blank())
ggplot(
housing_data %>%
filter(is.finite(price)) %>%
mutate(
operation = factor(operation, levels = c("Venta","Alquiler"))
),
aes(
x = log(price),
y = fct_reorder(tipo, price, .fun = median, .desc = FALSE)
)
) +
# forma de la distribución
geom_violin(trim = FALSE, alpha = 0.15, color = NA, fill = "#6C8EBF") +
# caja (dispersión) con outliers atenuados
geom_boxplot(width = 0.55, notch = TRUE, outlier.alpha = 0.12, color = "grey20", fill = "grey90") +
# punto de la media
stat_summary(fun = mean, geom = "point",
shape = 21, size = 2.2, stroke = 0.3,
fill = "white", color = "black") +
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Distribución de precios por tipo de propiedad",
subtitle = "Paneles por operación (Venta vs. Alquiler)\nViolin = forma | Boxplot = dispersión | Punto = media",
x = "Log(Precio)",
y = "Tipo de propiedad (ordenado por mediana)"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold"),
panel.grid.minor = element_blank(),
legend.position = "none"
)
source(file.path(scripts, "Tabla_est_descriptivas.R"))
gt_tbl_propiedades
gt::gtsave(gt_tbl, filename = file.path(views, "descriptivas_tipo_operacion.png"))
gt::gtsave(gt_tbl_propiedades, filename = file.path(views, "descriptivas_tipo_operacion.png"))
housing_data_sf <- st_as_sf(housing_data, coords = c("lon", "lat"), crs = 4326)
manzanas_bog <- readRDS(file.path(stores, "manzanas_bogota_cnpv2018.rds"))
lims <- quantile(manzanas_bog$DENSIDAD, probs = c(0.02, 0.98), na.rm = TRUE)
ggplot() +
geom_sf(data = manzanas_bog, aes(fill = DENSIDAD), color = NA) +
scale_fill_viridis_c(
option = "C",
name   = "hab/m²",
limits = lims,            # escala acotada P2–P98
oob    = scales::squish   # valores fuera de rango se “aplastan” al borde
) +
coord_sf(expand = FALSE) +
theme_minimal() +
labs(
title = "Censo 2018 — Densidad poblacional por manzana (Bogotá)",
subtitle = "Habitantes por m² (escala acotada P2–P98)",
x = NULL, y = NULL
)
s_m2 <- manzanas_bog |>
st_drop_geometry() |>
summarize(
n      = n(),
min    = min(DENSIDAD, na.rm = TRUE),
q1     = quantile(DENSIDAD, 0.25, na.rm = TRUE),
median = median(DENSIDAD, na.rm = TRUE),
mean   = mean(DENSIDAD, na.rm = TRUE),
q3     = quantile(DENSIDAD, 0.75, na.rm = TRUE),
p90    = quantile(DENSIDAD, 0.90, na.rm = TRUE),
p95    = quantile(DENSIDAD, 0.95, na.rm = TRUE),
max    = max(DENSIDAD, na.rm = TRUE),
sd     = sd(DENSIDAD, na.rm = TRUE)
)
to_ha <- function(x) ifelse(is.numeric(x), x * 1e4, x)
s_ha <- s_m2 |> mutate(across(everything(), to_ha))
stat_labels <- c(
n = "N (manzanas)",
min = "Mínimo",
q1  = "Q1 (25%)",
median = "Mediana",
mean   = "Media",
q3  = "Q3 (75%)",
p90 = "P90",
p95 = "P95",
max = "Máximo",
sd  = "Desv. estándar"
)
tabla <- tibble(
Estadístico = unname(stat_labels[names(s_m2)]),
`hab/m²` = unlist(s_m2[1, ]),
`hab/ha` = unlist(s_ha[1, ])
)
gt_tbl_densidad <- tabla |>
gt() |>
fmt_number(columns = `hab/m²`, decimals = 4) |>
fmt_number(columns = `hab/ha`, decimals = 1, sep_mark = ".", dec_mark = ",") |>
tab_header(
title = "Densidad poblacional — Resumen descriptivo",
subtitle = "Censo 2018, Bogotá D.C. (manzana)"
) |>
cols_label(
`hab/m²` = html("Densidad (hab/m²)"),
`hab/ha` = html("Densidad (hab/ha)")
) |>
tab_source_note(md("**Nota:** 1 ha = 10.000 m². La densidad en hab/ha es DENSIDAD·10.000."))
gt_tbl_densidad
gt::gtsave(gt_tbl_densidad, filename = file.path(views, "resumen_densidad_bogota.png"))
ggplot(st_drop_geometry(manzanas_bog), aes(x = DENSIDAD)) +
geom_histogram(bins = 40, alpha = 0.7) +
geom_density(linewidth = 0.9) +
scale_x_continuous(labels = label_number(accuracy = 0.0001)) +
labs(
title = "Distribución de la densidad poblacional (hab/m²)",
x = "Densidad (hab/m²)",
y = "Frecuencia"
) +
theme_minimal()
bog_bbox_4326 <- st_as_text(st_as_sfc(
st_bbox(c(xmin = -74.35, ymin = 4.45, xmax = -73.95, ymax = 4.95), crs = 4326)
))
manzanas_bog <- st_read(
dsn = here("stores", "MGN_NivelSectorUrbano_Integrado_CNPV", "MGN_ANM_SECTOR_URBANO.shp"),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
bog_bbox_4326 <- st_as_text(st_as_sfc(
st_bbox(c(xmin = -74.35, ymin = 4.45, xmax = -73.95, ymax = 4.95), crs = 4326)
))
manzanas_bog <- st_read(
dsn = here("stores", "MGN_NivelSectorUrbano_Integrado_CNPV", "MGN_ANM_SECTOR_URBANO.shp"),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
users <- tolower(Sys.info()[["user"]])
rutas <- list(
usuario = "C:/Users/Usuario/OneDrive - RADDAR/Documentos/Documents/Sebastian Tellez/MAESTRIA/ECONOMIA URBANA/TALLER/TALLER 1/Taller_1_EU_Punto_2/",
mora  = "C:/Users/mora/Path/To/TALLER/TALLER 1/"
)
root <- rutas[[users]]
setwd(root)
stores <- file.path(root, "stores")
scripts <- file.path(root, "scripts")
views <- file.path(root, "views")
sectores_bog <- st_read(
dsn = here("stores", "MGN_NivelSectorUrbano_Integrado_CNPV", "MGN_ANM_SECTOR_URBANO.shp"),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
sectores_bog <- st_read(
dsn = here("stores", "MGN_NivelSectorUrbano_Integrado_CNPV", "MGN_ANM_SECTOR_URBANO.shp"),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
rm(list=ls())
users <- tolower(Sys.info()[["user"]])
rutas <- list(
usuario = "C:/Users/Usuario/OneDrive - RADDAR/Documentos/Documents/Sebastian Tellez/MAESTRIA/ECONOMIA URBANA/TALLER/TALLER 1/Taller_1_EU_Punto_2/",
mora  = "C:/Users/mora/Path/To/TALLER/TALLER 1/"
)
root <- rutas[[users]]
setwd(root)
stores <- file.path(root, "stores")
scripts <- file.path(root, "scripts")
views <- file.path(root, "views")
#install.packages("pacman")
require("pacman")
p_load(rio,
dplyr,
ggplot2,
viridis,
forcats,
leaflet,
sf,
here,
scales,
gt,
tidyr
)
data_input <- import("stores/dataTaller01_Amenidades.rds") %>% as_tibble()
housing_data <- data_input %>%
filter(!is.na(price), !is.na(surface_total)) %>%
filter(price > 0, surface_total > 0)
iqr_surface <- IQR(housing_data$surface_total, na.rm = TRUE)
housing_data <- housing_data %>%
mutate(outlier_surface = ifelse(surface_total > 4 * iqr_surface, 1, 0))
table(housing_data$outlier_surface)
q_surface <- quantile(housing_data$surface_total, na.rm = TRUE)
housing_data <- housing_data %>%
mutate(surface_q = case_when(
surface_total < q_surface[2] ~ "Q1",
surface_total < q_surface[3] ~ "Q2",
surface_total < q_surface[4] ~ "Q3",
TRUE ~ "Q4"
))
source(file.path(scripts, "extraccion_tipo.R"))
table(housing_data$tipo)
housing_data <- housing_data %>%
mutate(log_price = log(price),
log_surface = log(surface_total))
ggplot(housing_data, aes(x = log_surface, y = log_price)) +
# nube de puntos ligera
geom_point(alpha = 0.15, size = 0.6) +
# capas de densidad para ver concentraciones
stat_density_2d(aes(fill = after_stat(level)),
geom = "polygon", alpha = 0.18, contour_var = "ndensity",
show.legend = FALSE) +
scale_fill_viridis_c(option = "C", guide = "none") +
# recta de tendencia por panel
geom_smooth(method = "lm", se = FALSE, linewidth = 0.9, color = "black") +
# paneles por tipo de operación (mismos límites para comparar)
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Relación log–log entre superficie y precio",
subtitle = "Paneles por operación (Venta vs. Arriendo)",
x = "Log(Superficie total)",
y = "Log(Precio)"
) +
theme_minimal(base_size = 12) +
theme(panel.grid.minor = element_blank())
ggplot(housing_data, aes(x = surface_q, y = log_price, fill = surface_q)) +
geom_violin(trim = FALSE, width = 0.9, alpha = 0.15, color = NA) +
geom_boxplot(width = 0.55, notch = TRUE, outlier.alpha = 0.12) +
stat_summary(fun = mean, geom = "point",
shape = 21, size = 2, stroke = 0.3,
fill = "white", color = "black") +
scale_x_discrete(limits = c("Q1","Q2","Q3","Q4")) +
scale_fill_viridis(discrete = TRUE, option = "C", guide = "none") +
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Distribución de precios por cuartiles de superficie",
subtitle = "Paneles por operación (Venta vs. Alquiler)",
x = "Cuartil de superficie",
y = "Log(Precio)"
) +
theme_classic(base_size = 12) +
theme(plot.title = element_text(face = "bold"),
panel.grid.minor = element_blank())
ggplot(
housing_data %>%
filter(is.finite(price)) %>%
mutate(
operation = factor(operation, levels = c("Venta","Alquiler"))
),
aes(
x = log(price),
y = fct_reorder(tipo, price, .fun = median, .desc = FALSE)
)
) +
# forma de la distribución
geom_violin(trim = FALSE, alpha = 0.15, color = NA, fill = "#6C8EBF") +
# caja (dispersión) con outliers atenuados
geom_boxplot(width = 0.55, notch = TRUE, outlier.alpha = 0.12, color = "grey20", fill = "grey90") +
# punto de la media
stat_summary(fun = mean, geom = "point",
shape = 21, size = 2.2, stroke = 0.3,
fill = "white", color = "black") +
facet_wrap(~ operation, ncol = 2, scales = "fixed") +
labs(
title = "Distribución de precios por tipo de propiedad",
subtitle = "Paneles por operación (Venta vs. Alquiler)\nViolin = forma | Boxplot = dispersión | Punto = media",
x = "Log(Precio)",
y = "Tipo de propiedad (ordenado por mediana)"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold"),
panel.grid.minor = element_blank(),
legend.position = "none"
)
source(file.path(scripts, "Tabla_est_descriptivas.R"))
gt_tbl_propiedades
gt::gtsave(gt_tbl_propiedades, filename = file.path(views, "descriptivas_tipo_operacion.png"))
housing_data_sf <- st_as_sf(housing_data, coords = c("lon", "lat"), crs = 4326)
manzanas_bog <- readRDS(file.path(stores, "manzanas_bogota_cnpv2018.rds"))
s_m2 <- manzanas_bog |>
st_drop_geometry() |>
summarize(
n      = n(),
min    = min(DENSIDAD, na.rm = TRUE),
q1     = quantile(DENSIDAD, 0.25, na.rm = TRUE),
median = median(DENSIDAD, na.rm = TRUE),
mean   = mean(DENSIDAD, na.rm = TRUE),
q3     = quantile(DENSIDAD, 0.75, na.rm = TRUE),
p90    = quantile(DENSIDAD, 0.90, na.rm = TRUE),
p95    = quantile(DENSIDAD, 0.95, na.rm = TRUE),
max    = max(DENSIDAD, na.rm = TRUE),
sd     = sd(DENSIDAD, na.rm = TRUE)
)
to_ha <- function(x) ifelse(is.numeric(x), x * 1e4, x)
s_ha <- s_m2 |> mutate(across(everything(), to_ha))
stat_labels <- c(
n = "N (manzanas)",
min = "Mínimo",
q1  = "Q1 (25%)",
median = "Mediana",
mean   = "Media",
q3  = "Q3 (75%)",
p90 = "P90",
p95 = "P95",
max = "Máximo",
sd  = "Desv. estándar"
)
tabla <- tibble(
Estadístico = unname(stat_labels[names(s_m2)]),
`hab/m²` = unlist(s_m2[1, ]),
`hab/ha` = unlist(s_ha[1, ])
)
gt_tbl_densidad <- tabla |>
gt() |>
fmt_number(columns = `hab/m²`, decimals = 4) |>
fmt_number(columns = `hab/ha`, decimals = 1, sep_mark = ".", dec_mark = ",") |>
tab_header(
title = "Densidad poblacional — Resumen descriptivo",
subtitle = "Censo 2018, Bogotá D.C. (manzana)"
) |>
cols_label(
`hab/m²` = html("Densidad (hab/m²)"),
`hab/ha` = html("Densidad (hab/ha)")
) |>
tab_source_note(md("**Nota:** 1 ha = 10.000 m². La densidad en hab/ha es DENSIDAD·10.000."))
gt_tbl_densidad
gt::gtsave(gt_tbl_densidad, filename = file.path(views, "resumen_densidad_bogota.png"))
ggplot(st_drop_geometry(manzanas_bog), aes(x = DENSIDAD)) +
geom_histogram(bins = 40, alpha = 0.7) +
geom_density(linewidth = 0.9) +
scale_x_continuous(labels = label_number(accuracy = 0.0001)) +
labs(
title = "Distribución de la densidad poblacional (hab/m²)",
x = "Densidad (hab/m²)",
y = "Frecuencia"
) +
theme_minimal()
sectores_bog <- st_read(
dsn = here("stores", "MGN_NivelSectorUrbano_Integrado_CNPV", "MGN_ANM_SECTOR_URBANO.shp"),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
bog_bbox_4326 <- st_as_text(st_as_sfc(
st_bbox(c(xmin = -74.35, ymin = 4.45, xmax = -73.95, ymax = 4.95), crs = 4326)
))
sectores_bog <- st_read(
dsn = here("stores", "MGN_NivelSectorUrbano_Integrado_CNPV", "MGN_ANM_SECTOR_URBANO.shp"),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
sectores_bog <- st_read(
dsn = file.path(
stores,
"MGN_NivelSectorUrbano_Integrado_CNPV",
"MGN_ANM_SECTOR_URBANO.shp"
),
wkt_filter = bog_bbox_4326, quiet = TRUE
) |>
st_transform(4326) |>
st_make_valid()
sectores_bog <- sectores_bog |> filter(MPIO_CDPMP == "11001")
lims <- quantile(sectores_bog$DENSIDAD, probs = c(0.02, 0.98), na.rm = TRUE)
ggplot() +
geom_sf(data = sectores_bog, aes(fill = DENSIDAD), color = NA) +
scale_fill_viridis_c(
option = "C",
name   = "hab/m²",
limits = lims,            # escala acotada P2–P98
oob    = scales::squish   # valores fuera de rango se “aplastan” al borde
) +
coord_sf(expand = FALSE) +
theme_minimal() +
labs(
title = "Censo 2018 — Densidad poblacional por manzana (Bogotá)",
subtitle = "Habitantes por m² (escala acotada P2–P98)",
x = NULL, y = NULL
)
View(sectores_bog)
sectores_bog <- sectores_bog |> mutate(DENSIDAD = STP27_PERS / AREA)
lims <- quantile(sectores_bog$DENSIDAD, probs = c(0.02, 0.98), na.rm = TRUE)
ggplot() +
geom_sf(data = sectores_bog, aes(fill = DENSIDAD), color = NA) +
scale_fill_viridis_c(
option = "C",
name   = "hab/m²",
limits = lims,            # escala acotada P2–P98
oob    = scales::squish   # valores fuera de rango se “aplastan” al borde
) +
coord_sf(expand = FALSE) +
theme_minimal() +
labs(
title = "Censo 2018 — Densidad poblacional por manzana (Bogotá)",
subtitle = "Habitantes por m² (escala acotada P2–P98)",
x = NULL, y = NULL
)
##########################################################
# Taller 1 - Económia Urbana
# Ejercicio 2
# author: Eimmy Nicoll Tovar Escobar y Juan Sebastian Tellez Melo
##########################################################
# Clean the workspace -----------------------------------------------------
rm(list=ls())
# Definir directorios -----------------------------------------------------
users <- tolower(Sys.info()[["user"]])
rutas <- list(
usuario = "C:/Users/Usuario/OneDrive - RADDAR/Documentos/Documents/Sebastian Tellez/MAESTRIA/ECONOMIA URBANA/TALLER/TALLER 1/Taller_1_EU_Punto_2/",
mora  = "C:/Users/mora/Path/To/TALLER/TALLER 1/"
)
root <- rutas[[users]]
setwd(root)
stores <- file.path(root, "stores")
scripts <- file.path(root, "scripts")
views <- file.path(root, "views")
# Load Packages -----------------------------------------------------------
#install.packages("pacman")
require("pacman")
p_load(rio,
dplyr,
ggplot2,
viridis,
forcats,
leaflet,
sf,
here,
scales,
gt,
tidyr
)
# Cargar datos -----------------------------------------------------------
data_input <- import("stores/dataTaller01_Amenidades.rds") %>% as_tibble()
# Limpieza y transformación -----------------------------------------------------------
# Filtramos datos sin NA en price y superficie, y sin ceros o negativos
housing_data <- data_input %>%
filter(!is.na(price), !is.na(surface_total)) %>%
filter(price > 0, surface_total > 0)
# Identificación de outliers
iqr_surface <- IQR(housing_data$surface_total, na.rm = TRUE)
housing_data <- housing_data %>%
mutate(outlier_surface = ifelse(surface_total > 4 * iqr_surface, 1, 0))
table(housing_data$outlier_surface)
# Categorización por cuantiles
q_surface <- quantile(housing_data$surface_total, na.rm = TRUE)
housing_data <- housing_data %>%
mutate(surface_q = case_when(
surface_total < q_surface[2] ~ "Q1",
surface_total < q_surface[3] ~ "Q2",
surface_total < q_surface[4] ~ "Q3",
TRUE ~ "Q4"
))
# Clasificación tipo de edifició (casa, apartamento, comercial) - Para ver detalle del codigo consultar script en carpeta "scripts"
source(file.path(scripts, "extraccion_tipo.R"))
